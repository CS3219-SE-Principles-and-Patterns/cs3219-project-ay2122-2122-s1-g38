apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ecr-ingress
  namespace: peerprep
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    ## SSL Settings
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-southeast-1:656831507331:certificate/0588c946-3b2a-4cb5-a773-d47386716c14
    # SSL Redirect Setting
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/target-group-attributes: stickiness.enabled=true,stickiness.lb_cookie.duration_seconds=60
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=600
    alb.ingress.kubernetes.io/target-type: ip
    # For creating record-set
    external-dns.alpha.kubernetes.io/hostname: api.peer-prep.live
spec:
  rules:
    - http:
        paths:
          - path: /* # SSL Redirect Setting
            pathType: Prefix
            backend:
              service:
                name: ssl-redirect
                port:
                  name: use-annotation

          - path: /match/*
            pathType: Prefix
            backend:
              service:
                name: match-service
                port:
                  number: 80

          - path: /interview/*
            pathType: Prefix
            backend:
              service:
                name: interview-service
                port:
                  number: 80

          - path: /chat/*
            pathType: Prefix
            backend:
              service:
                name: chat-service
                port:
                  number: 80

          - path: /*
            pathType: Prefix
            backend:
              service:
                name: account-service
                port:
                  number: 80
