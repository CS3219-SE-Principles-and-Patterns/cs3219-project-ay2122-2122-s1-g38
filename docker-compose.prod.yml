version: '3.8'
services:
  nginx:
    image: nginx:1.13-alpine
    ports:
      - 3001:80
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    restart: always
    logging:
      driver: none

  redis:
    image: 'redis:alpine'
    ports:
      - 6379:6379

  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432 # Expose port 5432 to localhost:5432 (can use with pgAdmin locally)

  client:
    image: peerprep-client
    build:
      context: ./frontend
      dockerfile: Dockerfile
    depends_on:
      - nginx
    environment:
      # Add any development build env here
      - BACKEND_URL:localhost
    ports:
      - 3000:3000
    networks:
      - default
    volumes:
      - client_node_modules:/app/node_modules
      - ./frontend:/app

  account:
    image: 656831507331.dkr.ecr.ap-southeast-1.amazonaws.com/peerprep-account
    depends_on:
      - nginx
      - postgres
    env_file:
      - ./backend/account/.env
    environment:
      # App variables
      - CLIENT_URL=http://localhost:3000
      - PORT=8081
      # Database Configuration
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/postgres
      - DB_SYNCHRONIZE=true
      # JWT Configuration
      - JWT_ACCESS_TOKEN_SECRET=accSecret
      - JWT_REFRESH_TOKEN_SECRET=refSecret
      - JWT_MAIL_VERIFY_SECRET=mailSecret
      - JWT_PASSWORD_RESET_SECRET=pwSecret
      - environment=production
    ports:
      - 8081:8081
    networks:
      - default

  chat:
    image: 656831507331.dkr.ecr.ap-southeast-1.amazonaws.com/peerprep-chat
    environment:
      - PORT=8082
    ports:
      - 8082:8082
    networks:
      - default

  interview:
    image: 656831507331.dkr.ecr.ap-southeast-1.amazonaws.com/peerprep-interview
    environment:
      - PORT=8083
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - 8083:8083
    networks:
      - default

  match:
    image: 656831507331.dkr.ecr.ap-southeast-1.amazonaws.com/peerprep-match
    depends_on:
      - nginx
      - redis
    environment:
      - PORT=8084
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - 8084:8084
    networks:
      - default

volumes:
  postgres:
  client_node_modules:

networks:
  default:
    name: peerprep-development
    driver: bridge
